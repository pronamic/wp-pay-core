name: QA

on: [ push, pull_request ]

env:
  COMPOSER_NO_INTERACTION: 1
  WP_TESTS_DB_PASS: password
  php-version: '7.4'
  wp-version: '*'

jobs:
  phpcs:
    name: PHP Coding Standards

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.php-version }}
          extensions: bcmath, intl, mbstring, mysql
          ini-values: memory_limit=2048M
          tools: composer, phpcs
          coverage: none

      - name: Composer validation
        run: composer validate --strict

      # https://github.com/actions/cache/blob/master/examples.md#php---composer
      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"
      - uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Require WordPress
        run: composer require --dev --no-update --no-progress --no-suggest roots/wordpress:${{ env.wp-version }} wp-phpunit/wp-phpunit:${{ env.wp-version }}

      - name: Install Composer dependencies
        run: composer update --no-progress --no-suggest

      - name: List Composer packages
        run: composer show

      - name: PHP Code Sniffer
        run: composer run-script phpcs

  phpmd:
    name: PHP Mess Detector
  
    runs-on: ubuntu-latest
  
    steps:
      - uses: actions/checkout@v2
  
      - uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.php-version }}
          extensions: bcmath, intl, mbstring, mysql
          ini-values: memory_limit=2048M
          tools: composer
          coverage: none
  
      - name: Composer validation
        run: composer validate --strict
  
      # https://github.com/actions/cache/blob/master/examples.md#php---composer
      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
            echo "::set-output name=dir::$(composer config cache-files-dir)"
      - uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-
  
      - name: Require WordPress
        run: composer require --dev --no-update --no-progress --no-suggest roots/wordpress:${{ env.wp-version }} wp-phpunit/wp-phpunit:${{ env.wp-version }}
  
      - name: Install Composer dependencies
        run: composer update --no-progress --no-suggest
  
      - name: List Composer packages
        run: composer show
  
      - name: PHP Mess Detector
        continue-on-error: true
        run: composer run-script phpmd

  phpstan:
    name: PHPStan

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.php-version }}
          extensions: bcmath, intl, mbstring, mysql
          ini-values: memory_limit=2048M
          tools: composer
          coverage: none

      # https://github.com/actions/cache/blob/master/examples.md#php---composer
      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"
      - uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer update --no-progress --no-suggest

      - name: Install PHPStan
        run: composer bin phpstan install

      - name: PHPStan
        run: composer run-script phpstan

  tests:
    name: Tests â€” PHP ${{ matrix.php-version }} ${{ matrix.name }}

    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        include:
          # PHP Compatibility and WordPress Versions: https://make.wordpress.org/core/handbook/references/php-compatibility-and-wordpress-versions/
          - name: WP 5.6
            php-version: 7.4
            wp-version: 5.6.*
          - name: WP 5.5
            php-version: 7.4
            wp-version: 5.5.*
          # WordPress and PHP 7.4: https://make.wordpress.org/core/2019/10/11/wordpress-and-php-7-4/.
          - name: WP 5.4
            php-version: 7.4
            wp-version: 5.4.*
          - name: WP 5.3
            php-version: 7.4
            wp-version: 5.3.*
          # WordPress 5.2 (or lower) will trigger PHP 7.4 (or higher) errors.
          # @link https://make.wordpress.org/core/2019/10/11/wordpress-and-php-7-4/.
          - name: WP 5.2
            php-version: 7.3
            wp-version: 5.2.*
          - name: Multisite
            php-version: 7.4
            WP_MULTISITE: 1
          - php-version: 7.4
          - php-version: 7.3
          - php-version: 7.2
          - php-version: 7.1
          - php-version: 7.0
          - php-version: 5.6

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: false
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: wp_phpunit_tests
        ports:
          - 3306/tcp
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: actions/checkout@v2

      - uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: bcmath, intl, mbstring, mysql
          ini-values: memory_limit=2048M
          tools: composer
          coverage: none

      # https://github.com/actions/cache/blob/master/examples.md#php---composer
      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"
      - uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Start MySQL service
        run: sudo service mysql start

      - name: Require WordPress
        run: composer require --dev --no-update --no-progress --no-suggest roots/wordpress:${{ matrix.wp-version || env.wp-version }} wp-phpunit/wp-phpunit:${{ matrix.wp-version || env.wp-version }}

      - name: Install Composer dependencies
        run: composer update --no-progress --no-suggest

      - name: List Composer packages
        run: composer show

      - name: PHPLint
        run: composer run-script phplint

      - name: PHPUnit test suite
        env:
          WP_TESTS_DB_HOST: 127.0.0.1:${{ job.services.mysql.ports['3306'] }}
        run: composer run-script phpunit

  code-coverage:
    name: Code Coverage

    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: false
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: wp_phpunit_tests
        ports:
          - 3306/tcp
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: actions/checkout@v2

      - uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.php-version }}
          extensions: bcmath, intl, mbstring, mysql
          ini-values: memory_limit=2048M
          tools: composer
          coverage: xdebug

      # https://github.com/actions/cache/blob/master/examples.md#php---composer
      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"
      - uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Start MySQL service
        run: sudo service mysql start

      - name: Require WordPress
        run: composer require --dev --no-update --no-progress --no-suggest roots/wordpress:${{ env.wp-version }} wp-phpunit/wp-phpunit:${{ env.wp-version }}

      - name: Install Composer dependencies
        run: composer update --no-progress --no-suggest

      - name: List Composer packages
        run: composer show

      - name: PHPLint
        run: composer run-script phplint

      - name: PHPUnit test suite
        env:
          WP_TESTS_DB_HOST: 127.0.0.1:${{ job.services.mysql.ports['3306'] }}
        run: composer run-script coverage

      - name: Publish coverage
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

        run: |
          composer run-script coveralls
          bash <(curl -s https://codecov.io/bash)

  es-lint:
    name: Scripts

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      # https://github.com/actions/cache/blob/master/examples.md#macos-and-ubuntu
      - uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - uses: actions/setup-node@v1
        with:
          node-version: '12'

      - name: Install Node packages
        run: npm install

      - name: ESLint
        run: npm run-script eslint

  sass-lint:
    name: Styles
  
    runs-on: ubuntu-latest
  
    steps:
        - uses: actions/checkout@v2
  
        # https://github.com/actions/cache/blob/master/examples.md#macos-and-ubuntu
        - uses: actions/cache@v2
          with:
              path: ~/.npm
              key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
              restore-keys: |
                  ${{ runner.os }}-node-
  
        - uses: actions/setup-node@v1
          with:
              node-version: '12'
  
        - name: Install Node packages
          run: npm install
  
        - name: Sass Lint
          run: npm run-script sass-lint
